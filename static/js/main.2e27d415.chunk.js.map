{"version":3,"sources":["template/logo.png","components/Header.tsx","services/useMovieResults.service.ts","components/Loader.tsx","components/SearchResultsRow.tsx","template/defaultPoster.png","components/SearchResultsTable.tsx","components/SearchBar.tsx","components/NominatedRow.tsx","components/NominatedTable.tsx","components/MovieNominationTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","width","src","logo","useMovieResultsService","title","useState","status","payload","undefined","result","setResult","slice","useEffect","length","fetch","then","response","json","Search","catch","error","console","log","Loader","SearchResultsRow","searchResult","nominatedMovies","onAddNominatedMovie","checkboxVal","setCheckboxVal","shortenedTitle","Title","substring","has5Nominations","Poster","type","onChange","event","target","checked","isNominated","disabled","Year","SearchResultsTable","searchedTitle","searchResults","searchResultRows","filter","movie","Type","forEach","find","imdbID","defaultPoster","push","renderSearchResults","SearchBar","onSearchedTitleChange","placeholder","aria-label","aria-describedby","value","preventDefault","onKeyDown","key","NominatedRow","nominatedMovie","onRemove","onClick","NominatedTable","nominatedMovieRows","role","MovieNominationTable","React","setSearchedTitle","setNominatedMovies","newSearch","App","rel","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e27d415.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.dd7bdb9e.png\";","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport logo from '../template/logo.png';\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div className=\"header row\">\r\n            <div className=\"col-12\">\r\n                <img width=\"250\" src={logo}></img>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from 'react';\r\nimport { API } from '../types/API';\r\nimport { Movies } from '../types/Movie';\r\n\r\nconst useMovieResultsService = (title: string): API<Movies> => {\r\n    const [result, setResult] = useState<API<Movies>>({\r\n        status: 'init',\r\n        payload: undefined,\r\n    });\r\n\r\n    // result will be empty if the the searchedTitle's last character is a space\r\n    // to fix this, remove the space character at the end of the string\r\n    const isLastCharSpace = title.slice(-1) === ' ';\r\n    if (isLastCharSpace) title = title.slice(0, -1);\r\n\r\n    useEffect(() => {\r\n        if (title.length === 0) return;\r\n        setResult({ status: 'loading', payload: undefined });\r\n        fetch(`https://www.omdbapi.com/?s=${title}&apikey=1a937fbc`)\r\n            .then((response) => response.json())\r\n            .then((response) =>\r\n                setResult({\r\n                    status: 'loaded',\r\n                    payload: response.Search,\r\n                }),\r\n            )\r\n            .catch((error) => setResult({ status: 'error', error }));\r\n    }, [title]);\r\n    console.log(result);\r\n    return result;\r\n};\r\n\r\nexport default useMovieResultsService;\r\n","import React from 'react';\r\n\r\nconst Loader: React.FC = () => <p>loading...</p>;\r\n\r\nexport default Loader;\r\n","/* eslint react/prop-types: 0 */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Movie, Movies } from '../types/Movie';\r\n\r\nconst maxTitleLength = 17;\r\n\r\ninterface Props {\r\n    searchResult: Movie;\r\n    nominatedMovies: Movies;\r\n    onAddNominatedMovie: (searchResult: Movie) => void;\r\n}\r\n\r\nconst SearchResultsRow: React.FC<Props> = ({ searchResult, nominatedMovies, onAddNominatedMovie }) => {\r\n    const [checkboxVal, setCheckboxVal] = useState(false);\r\n\r\n    const handleClick = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setCheckboxVal(event.target.checked);\r\n        searchResult.isNominated = checkboxVal;\r\n        onAddNominatedMovie(searchResult);\r\n    };\r\n    let shortenedTitle = '';\r\n    if (searchResult.Title.length > maxTitleLength) {\r\n        shortenedTitle = searchResult.Title.substring(0, maxTitleLength) + '...';\r\n    } else {\r\n        shortenedTitle = searchResult.Title;\r\n    }\r\n\r\n    const has5Nominations = nominatedMovies.length === 5;\r\n\r\n    return (\r\n        <div className=\"searchResult col\">\r\n            <img width=\"100\" src={searchResult.Poster}></img>\r\n            <div className=\"input-group button\">\r\n                <label className=\"customCheckbox\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={handleClick}\r\n                        disabled={searchResult.isNominated || has5Nominations}\r\n                    />\r\n                    <i className=\"fa fa-star\"></i>\r\n                </label>\r\n            </div>\r\n            <div className=\"title\">\r\n                {shortenedTitle} <p>{searchResult.Year}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResultsRow;\r\n","export default __webpack_public_path__ + \"static/media/defaultPoster.723dc18d.png\";","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport useMovieResultsService from '../services/useMovieResults.service';\r\nimport { Movie, Movies } from '../types/Movie';\r\nimport Loader from './Loader';\r\nimport SearchResultsRow from './SearchResultsRow';\r\nimport defaultPoster from '../template/defaultPoster.png';\r\n\r\ninterface Props {\r\n    searchedTitle: string;\r\n    nominatedMovies: Movies;\r\n    onAddNominatedMovie: (searchResult: Movie) => void;\r\n}\r\n\r\nconst SearchResultsTable: React.FC<Props> = ({ searchedTitle, nominatedMovies, onAddNominatedMovie }) => {\r\n    const searchResults = useMovieResultsService(searchedTitle);\r\n    const searchResultRows: JSX.Element[] = [];\r\n\r\n    const renderSearchResults = (searchResults: Movies): void => {\r\n        searchResults = searchResults.filter((movie: Movie) => movie.Type === 'movie');\r\n        searchResults.forEach((searchResult: Movie) => {\r\n            const isNominated = undefined !== nominatedMovies.find((movie) => movie.imdbID === searchResult.imdbID);\r\n            searchResult.isNominated = isNominated;\r\n\r\n            if (searchResult.Poster === 'N/A') searchResult.Poster = defaultPoster;\r\n\r\n            searchResultRows.push(\r\n                <SearchResultsRow\r\n                    key={searchResult.imdbID}\r\n                    searchResult={searchResult}\r\n                    nominatedMovies={nominatedMovies}\r\n                    onAddNominatedMovie={onAddNominatedMovie}\r\n                />,\r\n            );\r\n        });\r\n    };\r\n\r\n    if (searchResults.status === 'loaded' && searchResults.payload !== undefined) {\r\n        renderSearchResults(searchResults.payload);\r\n        console.log(searchResults.payload);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {searchResults.status === 'loading' && <Loader />}\r\n            <div className=\"image-grid-container\">\r\n                {searchResults.status === 'loaded' && searchResults.payload !== undefined && searchResultRows}\r\n            </div>\r\n            {searchResults.status === 'loaded' && searchResults.payload === undefined && searchedTitle.length >= 3 && (\r\n                <p>no results found</p>\r\n            )}\r\n            {searchResults.status === 'loaded' && searchedTitle.length < 3 && <p>too many results please specify</p>}\r\n            {searchResults.status === 'error' && (\r\n                <p>Error, something weird happened with the search. {searchResults.error}</p>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchResultsTable;\r\n","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\ninterface Props {\r\n    searchedTitle: string;\r\n    onSearchedTitleChange: (searchedTitle: string) => void;\r\n}\r\n\r\nconst SearchBar: React.FC<Props> = ({ searchedTitle, onSearchedTitleChange }) => {\r\n    const handleSearchedTitleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        event.preventDefault();\r\n        onSearchedTitleChange(event.target.value);\r\n    };\r\n    const onEnter = (event: React.KeyboardEvent<HTMLInputElement>): void => {\r\n        if (event.key === 'Enter') event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-4\"></div>\r\n            <div className=\"input-group col-4 searchBar\">\r\n                {/* <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                        <i className=\"fa fa-search\"></i>\r\n                    </span>\r\n                </div> */}\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search a movie title\"\r\n                    aria-label=\"Search\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={searchedTitle}\r\n                    onChange={handleSearchedTitleChange}\r\n                    onKeyDown={onEnter}\r\n                ></input>\r\n            </div>\r\n            <div className=\"col-4\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","/* eslint react/prop-types: 0 */\r\n\r\nimport React from 'react';\r\nimport { Movie } from '../types/Movie';\r\n\r\ninterface Props {\r\n    nominatedMovie: Movie;\r\n    onRemove: (searchResult: Movie) => void;\r\n}\r\n\r\nconst NominatedRow: React.FC<Props> = ({ nominatedMovie, onRemove }) => {\r\n    const handleClick = (): void => {\r\n        nominatedMovie.isNominated = false;\r\n        onRemove(nominatedMovie);\r\n    };\r\n    return (\r\n        <div className=\"row nomination\">\r\n            <button type=\"button\" className=\"btn-close\" onClick={handleClick}>\r\n                x\r\n            </button>\r\n            <p>{nominatedMovie.Title} </p>({nominatedMovie.Year})\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NominatedRow;\r\n","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport { Movie, Movies } from '../types/Movie';\r\nimport NominatedRow from './NominatedRow';\r\n\r\ninterface Props {\r\n    nominatedMovies: Movies;\r\n    onRemove: (searchResult: Movie) => void;\r\n}\r\n\r\nconst NominatedTable: React.FC<Props> = ({ nominatedMovies, onRemove }) => {\r\n    const nominatedMovieRows: JSX.Element[] = [];\r\n    if (nominatedMovies != undefined) {\r\n        nominatedMovies.forEach((nominatedMovie) => {\r\n            nominatedMovieRows.push(\r\n                <NominatedRow key={nominatedMovie.imdbID} nominatedMovie={nominatedMovie} onRemove={onRemove} />,\r\n            );\r\n        });\r\n    }\r\n\r\n    const has5Nominations = nominatedMovies.length === 5;\r\n\r\n    return (\r\n        <div className=\"nominationTable\">\r\n            {has5Nominations && (\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    You&apos;ve chosen your 5 nominations!\r\n                </div>\r\n            )}\r\n            <p>NOMINATIONS ({nominatedMovies.length})</p>\r\n            {nominatedMovieRows}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NominatedTable;\r\n","import React from 'react';\r\nimport SearchResultsTable from './SearchResultsTable';\r\nimport SearchBar from './SearchBar';\r\nimport { Movie, Movies } from '../types/Movie';\r\nimport NominatedTable from './NominatedTable';\r\n\r\nconst MovieNominationTable: React.FC = () => {\r\n    const [searchedTitle, setSearchedTitle] = React.useState('');\r\n    const [nominatedMovies, setNominatedMovies] = React.useState<Movies>([]);\r\n\r\n    const handleSearchedTitleChange = (newSearch: string): void => {\r\n        setSearchedTitle(newSearch);\r\n    };\r\n    const onAddNominatedMovie = (nominatedMovie: Movie): void => {\r\n        setNominatedMovies([...nominatedMovies, { ...nominatedMovie }]);\r\n    };\r\n    const onRemoveNominatedMovie = (nominatedMovie: Movie): void => {\r\n        setNominatedMovies(nominatedMovies.filter((movie) => movie.imdbID !== nominatedMovie.imdbID));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SearchBar searchedTitle={searchedTitle} onSearchedTitleChange={handleSearchedTitleChange} />\r\n            <div className=\"row\">\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-6\">\r\n                    <SearchResultsTable\r\n                        searchedTitle={searchedTitle}\r\n                        nominatedMovies={nominatedMovies}\r\n                        onAddNominatedMovie={onAddNominatedMovie}\r\n                    />\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-3\">\r\n                    <NominatedTable nominatedMovies={nominatedMovies} onRemove={onRemoveNominatedMovie} />\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MovieNominationTable;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport MovieNominationTable from './components/MovieNominationTable';\r\n\r\nfunction App(): JSX.Element {\r\n    return (\r\n        <div className=\"App\">\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n            ></link>\r\n            <Header />\r\n            <MovieNominationTable />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}